#/usr/bin/python3

'''
This script inputs the standard output generated by dpdk_snoop_app.
This script generates a json output of the input file.
The json output consists of the information of each packets.
'''

import re
import sys
import pandas as pd
import json

P=[]
I=[]
S=[]
Sr=[]
Sp=[]
Dr=[]
Dp=[]
T=[]
Ti=[]

# Read the standard output file of dpdk_snoop_app
f=open(sys.argv[1],'r')

# Search all the IP addresses,packet size and timestamp
for line in f:
    x=re.search('^IPv*',line)
    if(x):
        I.append(line)
        T.append(f.readline())
    y=re.search('^received a pkt, size:*',line)
    if(y):
        P.append(line)
f.close()

# Extract IP addresses and ports
for j in I:
    v=re.split('->|:|\n',j)
    if str(v[0])=='IPv6':
        s=':'.join(v[1:7])
        Sr.append(s)
        s=':'.join(v[8:11])
        Dr.append(s)
        Sp.append(v[7])
        Dp.append(v[11])
    else:
        Sr.append(v[1])
        Sp.append(v[2])
        Dr.append(v[3])
        Dp.append(v[4])


for i in range(len(Sr)):
    Sr[i]=Sr[i].strip()

# Extract packet size
for i in P:
    pa=re.split('\s',i)
    S.append(int(pa[4]))

# Extract TCP Timestamp
for k in T:
    if(re.search('       TCP timestamps value:*',k)):
        Ts=re.split('\s|,',k)
        Ti.append(int(Ts[11]))
    else:
        Ti.append(' ')

# Create the json output
All=list(zip(S,Sr,Sp,Dr,Dp,Ti))
df=pd.DataFrame(All,columns=['LENGTH','SOURCE-IP','SOURCE-PORT','DESTINATION-IP','DESTINATION-PORT','TIMESTAMP'])
df1=df.to_markdown(index=False)
#print(df1)
out=df.to_json(orient = "records")
print(out)
